// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PasaLife.DAL;

namespace PasaLife.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211223081752_Change2Product")]
    partial class Change2Product
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PasaLife.Models.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzDescription = "“PAŞA Holding” şirkətlər qrupuna daxil olan “PAŞA Həyat Sığorta” Açıq Səhmdar Cəmiyyəti 24.11.2010-cu il tarixdə Azərbaycan Respublikası Vergilər Nazirliyi tərəfindən dövlət qeydiyyatına alınaraq Azərbaycan Respublikası Maliyyə Nazirliyinin 14.02.2011-ci il tarixli lisenziyası əsasında həyat sığortası sahəsi üzrə xidmətlərin həyata keçirilməsi istiqamətində fəaliyyət göstərir.",
                            AzTitle = "PAŞA Həyat",
                            EnDescription = "“PASHA Life Insurance” Open Joint Stock Company, which is a part of “PASHA Holding” group of companies, was registered by the Ministry of Taxes of the Republic of Azerbaijan on 24.11.2010 and provides life insurance services on the basis of the license of the Ministry of Finance of the Republic of Azerbaijan dated 14.02.2011. acts in the direction of holding.",
                            EnTitle = "PAŞA Həyat",
                            IsDeactive = false,
                            RuDescription = "Открытое акционерное общество «PASHA Life Insurance», входящее в группу компаний «PASHA Holding», было зарегистрировано Министерством налогов Азербайджанской Республики 24.11.2010 и предоставляет услуги по страхованию жизни на основании лицензии. Министерства финансов Азербайджанской Республики от 14.02.2011 г. действует в направлении холдинга.",
                            RuTitle = "PAŞA Həyat"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.AboutCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutCompanies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzDescription = "a",
                            AzTitle = "PAŞA həyat",
                            EnDescription = "e",
                            EnTitle = "PAŞA həyat",
                            Image = "preview.jpg",
                            RuDescription = "r",
                            RuTitle = "PAŞA həyat",
                            VideoLink = "https://www.youtube.com/embed/5O3XjaYWyq4"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.AboutCompanyCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Figures")
                        .HasColumnType("int");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutCompanyCarts");
                });

            modelBuilder.Entity("PasaLife.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Awards");
                });

            modelBuilder.Entity("PasaLife.Models.AwardSeo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AwardSeos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzSeoTitle = "Mükafat Seo Başlıq"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.Career", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Careers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzDescription = "“PAŞA Həyat Sığorta” ASC dinamik inkişaf edən universal həyat sığortası şirkəti olmaqla hazırda Azərbaycan Respublikasının Sığorta qanunvericiliyi ilə nəzərdə tutulmuş həyat sığortası sinfinə aid olan bütün növ məhsulları müştərilərinə təqdim edir.“PAŞA Həyat Sığorta” ASC İcbari Sığorta Bürosunun iştirakçısıdır.",
                            AzTitle = "BİZƏ QOŞUL",
                            EnDescription = "Being a dynamically developing universal life insurance company, PASHA Life Insurance OJSC currently offers its customers all types of life insurance products provided by the Insurance Legislation of the Republic of Azerbaijan. PASHA Life Insurance OJSC is a member of the Compulsory Insurance Bureau.",
                            EnTitle = "JOIN US",
                            Image = "preview.jpg",
                            RuDescription = "ОАО «PASHA Life Insurance» - динамично развивающаяся универсальная компания по страхованию жизни, в настоящее время предлагает своим клиентам все виды продуктов по страхованию жизни, предусмотренные Страховым законодательством Азербайджанской Республики. ОАО «PASHA Life Insurance» является членом Бюро по обязательному страхованию.",
                            RuTitle = "ПРИСОЕДИНЯЙТЕСЬ К НАМ"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzAddress = "Bakı, Azərbaycan M.Useynov küç., 61, AZ1003",
                            AzDescription = "Hər hansı bir sığorta hadisəsində sizə kömək etməkdən həmişə məmnunuq",
                            AzTitle = "ƏLAQƏ",
                            ContactNumber = "012 942 | 994 12 525 29 42",
                            EnAddress = "Baku, Azerbaijan 61 M.Useynov str., AZ1003",
                            EnDescription = "We are always happy to help you in any insurance event",
                            EnTitle = "CONTACT",
                            RuAddress = "Баку, Азербайджан ул. М.Усейнова 61, AZ1003",
                            RuDescription = "Мы всегда рады помочь вам в любом страховом случае.",
                            RuTitle = "КОНТАКТ"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Work")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PasaLife.Models.FAQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FAQCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("InformationCenterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FAQCategoryId");

                    b.HasIndex("InformationCenterId");

                    b.HasIndex("ProductId");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("PasaLife.Models.FAQCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQCategories");
                });

            modelBuilder.Entity("PasaLife.Models.Footer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Footers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzTitle = "infobank.az",
                            EnTitle = "infobank.az",
                            IsDeactive = false,
                            RuTitle = "infobank.az",
                            URL = "https://infobank.az/"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.HomeCarousel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeCarousels");
                });

            modelBuilder.Entity("PasaLife.Models.HomeCarouselSeo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeCarouselSeos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzSeoTitle = "HomeCarousel Seo Başlıq"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.HomeCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeCenters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzTitle = "Həyat yaşam sığortası",
                            EnTitle = "Life insurance",
                            IsDeactive = false,
                            RuTitle = "Страхование жизни",
                            URL = ""
                        },
                        new
                        {
                            Id = 2,
                            AzTitle = "Gəlirli həyat sığortası",
                            EnTitle = "Profitable life insurance",
                            IsDeactive = false,
                            RuTitle = "Выгодное страхование жизни",
                            URL = ""
                        },
                        new
                        {
                            Id = 3,
                            AzTitle = "İcbari həyat sığortası",
                            EnTitle = "Compulsory life insurance",
                            IsDeactive = false,
                            RuTitle = "Обязательное страхование жизни",
                            URL = ""
                        });
                });

            modelBuilder.Entity("PasaLife.Models.ITPlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("OnlineServiceId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OnlineServiceId");

                    b.ToTable("ITPlatforms");
                });

            modelBuilder.Entity("PasaLife.Models.IconButton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IconButtons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzName = "Şəxsi kabinet",
                            EnName = "Personal cabinet",
                            Icon = "u.svg",
                            RuName = "Личный кабинет",
                            URL = "https://mylife.az/"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.InformationCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InformationCenters");
                });

            modelBuilder.Entity("PasaLife.Models.Management", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("ManagementCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("RuFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementCategoryId");

                    b.ToTable("Managements");
                });

            modelBuilder.Entity("PasaLife.Models.ManagementCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManagementCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzName = "Idarə Heyəti",
                            EnName = "Board of Directors",
                            IsDeactive = false,
                            RuName = "Совет директоров1"
                        },
                        new
                        {
                            Id = 2,
                            AzName = "Direktorlar Şurası",
                            EnName = "Counsel of Directors",
                            IsDeactive = false,
                            RuName = "Совет директоров2"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.ManagementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagementId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementId")
                        .IsUnique();

                    b.ToTable("ManagementDetail");
                });

            modelBuilder.Entity("PasaLife.Models.Navbar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Navbars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzTitle = "Haqqımızda",
                            EnTitle = "About us",
                            IsDeactive = false,
                            RuTitle = "О нас",
                            URL = ""
                        },
                        new
                        {
                            Id = 2,
                            AzTitle = "Məhsullar",
                            EnTitle = "Products",
                            IsDeactive = false,
                            RuTitle = "Продукты",
                            URL = ""
                        },
                        new
                        {
                            Id = 3,
                            AzTitle = "Online xidmətlər",
                            EnTitle = "Online services",
                            IsDeactive = false,
                            RuTitle = "Онлайн-сервисы",
                            URL = ""
                        },
                        new
                        {
                            Id = 4,
                            AzTitle = "Məlumat mərkəzi",
                            EnTitle = "Information Center",
                            IsDeactive = false,
                            RuTitle = "Информационный центр",
                            URL = ""
                        },
                        new
                        {
                            Id = 5,
                            AzTitle = "Karyera",
                            EnTitle = "Career",
                            IsDeactive = false,
                            RuTitle = "Карьера",
                            URL = ""
                        },
                        new
                        {
                            Id = 6,
                            AzTitle = "Əlaqə",
                            EnTitle = "Contact",
                            IsDeactive = false,
                            RuTitle = "Контакт",
                            URL = ""
                        });
                });

            modelBuilder.Entity("PasaLife.Models.New", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InformationCenterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InformationCenterId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("PasaLife.Models.NewsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewId")
                        .IsUnique();

                    b.ToTable("NewsDetails");
                });

            modelBuilder.Entity("PasaLife.Models.OnlineService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnlineServices");
                });

            modelBuilder.Entity("PasaLife.Models.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("PasaLife.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzDetailDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDetailDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductItem1")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductItem2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductItem3")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductItem4")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductItem5")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSimple")
                        .HasColumnType("bit");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDetailDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PasaLife.Models.ProductChart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCharts");
                });

            modelBuilder.Entity("PasaLife.Models.ProductDetailTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzFirstSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzFourthSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSecondSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzThirdSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnFirstSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnFourthSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSecondSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnThirdSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuFirstSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuFourthSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSecondSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuThirdSection")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductDetailTitles");
                });

            modelBuilder.Entity("PasaLife.Models.ProductInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSectionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSectionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSectionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductInformations");
                });

            modelBuilder.Entity("PasaLife.Models.ProductItem1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzDescriptionBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzEndDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescriptionBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnEndDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDescriptionBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuEndDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuWork")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItem1s");
                });

            modelBuilder.Entity("PasaLife.Models.ProductItem3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSecondDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSecondTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzThirdDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzThirdTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSecondDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSecondTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnThirdDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnThirdTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSecondDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSecondTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuThirdDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuThirdTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItem3s");
                });

            modelBuilder.Entity("PasaLife.Models.ProductItem4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzDescriptionBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzPhoneInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescriptionBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnPhoneInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDescriptionBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuPhoneInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItem4s");
                });

            modelBuilder.Entity("PasaLife.Models.ProductWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductWords");
                });

            modelBuilder.Entity("PasaLife.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("ReportCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("RuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReportCategoryId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("PasaLife.Models.ReportCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzName = "Audit rəyi",
                            EnName = "Audit opinion",
                            IsDeactive = false,
                            RuName = "Аудиторское заключение"
                        },
                        new
                        {
                            Id = 2,
                            AzName = "Maliyyə hesabatı",
                            EnName = "Financial report",
                            IsDeactive = false,
                            RuName = "финансовый отчет"
                        },
                        new
                        {
                            Id = 3,
                            AzName = "İdarəetmə hesabatı",
                            EnName = "Management report",
                            IsDeactive = false,
                            RuName = "Отчет руководства"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InformationCenterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RuleCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InformationCenterId");

                    b.HasIndex("RuleCategoryId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("PasaLife.Models.RuleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RuleCategories");
                });

            modelBuilder.Entity("PasaLife.Models.SecondMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SecondMenus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzTitle = "Şirkət haqqında",
                            EnTitle = "About the company",
                            IsDeactive = false,
                            RuTitle = "О компании",
                            URL = ""
                        },
                        new
                        {
                            Id = 2,
                            AzTitle = "Rəhbərlik",
                            EnTitle = "Leadership",
                            IsDeactive = false,
                            RuTitle = "Руководство",
                            URL = ""
                        },
                        new
                        {
                            Id = 3,
                            AzTitle = "Struktur",
                            EnTitle = "Structure",
                            IsDeactive = false,
                            RuTitle = "Структура",
                            URL = ""
                        },
                        new
                        {
                            Id = 4,
                            AzTitle = "Hesabatlar",
                            EnTitle = "Reports",
                            IsDeactive = false,
                            RuTitle = "Отчеты",
                            URL = ""
                        },
                        new
                        {
                            Id = 5,
                            AzTitle = "Mükafatlar",
                            EnTitle = "Awards",
                            IsDeactive = false,
                            RuTitle = "Награды",
                            URL = ""
                        },
                        new
                        {
                            Id = 6,
                            AzTitle = "Karyera",
                            EnTitle = "Career",
                            IsDeactive = false,
                            RuTitle = "Карьера",
                            URL = ""
                        });
                });

            modelBuilder.Entity("PasaLife.Models.SimpleProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("SimpleProducts");
                });

            modelBuilder.Entity("PasaLife.Models.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("PasaLife.Models.Structure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Structures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "structure.jpg"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.URLButton", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("URLButtons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Haqqımızda",
                            URL = "/aboutus"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Məhsullar",
                            URL = "/product"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Online xidmətlər",
                            URL = "/onlineservices"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Məlumat mərkəzi",
                            URL = "/informationcenter"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Karyera",
                            URL = "/career"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Əlaqə",
                            URL = "/contact"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Şirkət haqqında",
                            URL = "/aboutcompany"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Rəhbərlik",
                            URL = "/management"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Struktur",
                            URL = "/structure"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Hesabatlar",
                            URL = "/report"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Mükafatlar",
                            URL = "/award"
                        });
                });

            modelBuilder.Entity("PasaLife.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PasaLife.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuSeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("PasaLife.Models.VacancyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VacancyId")
                        .IsUnique();

                    b.ToTable("VacancyDetails");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PasaLife.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PasaLife.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PasaLife.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PasaLife.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PasaLife.Models.Customer", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithMany("Customers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.FAQ", b =>
                {
                    b.HasOne("PasaLife.Models.FAQCategory", "FAQCategory")
                        .WithMany("FAQs")
                        .HasForeignKey("FAQCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PasaLife.Models.InformationCenter", "InformationCenter")
                        .WithMany("FAQs")
                        .HasForeignKey("InformationCenterId");

                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithMany("FAQs")
                        .HasForeignKey("ProductId");

                    b.Navigation("FAQCategory");

                    b.Navigation("InformationCenter");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.ITPlatform", b =>
                {
                    b.HasOne("PasaLife.Models.OnlineService", "OnlineService")
                        .WithMany("ITPlatforms")
                        .HasForeignKey("OnlineServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OnlineService");
                });

            modelBuilder.Entity("PasaLife.Models.Management", b =>
                {
                    b.HasOne("PasaLife.Models.ManagementCategory", "ManagementCategory")
                        .WithMany("Managements")
                        .HasForeignKey("ManagementCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementCategory");
                });

            modelBuilder.Entity("PasaLife.Models.ManagementDetail", b =>
                {
                    b.HasOne("PasaLife.Models.Management", "Management")
                        .WithOne("ManagementDetail")
                        .HasForeignKey("PasaLife.Models.ManagementDetail", "ManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Management");
                });

            modelBuilder.Entity("PasaLife.Models.New", b =>
                {
                    b.HasOne("PasaLife.Models.InformationCenter", "InformationCenter")
                        .WithMany("News")
                        .HasForeignKey("InformationCenterId");

                    b.Navigation("InformationCenter");
                });

            modelBuilder.Entity("PasaLife.Models.NewsDetail", b =>
                {
                    b.HasOne("PasaLife.Models.New", "New")
                        .WithOne("NewsDetail")
                        .HasForeignKey("PasaLife.Models.NewsDetail", "NewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("New");
                });

            modelBuilder.Entity("PasaLife.Models.Partner", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithMany("Partners")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.ProductChart", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithMany("ProductCharts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.ProductDetailTitle", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithOne("ProductDetailTitle")
                        .HasForeignKey("PasaLife.Models.ProductDetailTitle", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.ProductInformation", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithOne("ProductInformation")
                        .HasForeignKey("PasaLife.Models.ProductInformation", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.ProductItem1", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithMany("ProductItem1s")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.ProductItem3", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithMany("ProductItem3s")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.ProductItem4", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithMany("ProductItem4s")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.ProductWord", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithMany("ProductWords")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.Report", b =>
                {
                    b.HasOne("PasaLife.Models.ReportCategory", "ReportCategory")
                        .WithMany("Reports")
                        .HasForeignKey("ReportCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportCategory");
                });

            modelBuilder.Entity("PasaLife.Models.Rule", b =>
                {
                    b.HasOne("PasaLife.Models.InformationCenter", "InformationCenter")
                        .WithMany("Rules")
                        .HasForeignKey("InformationCenterId");

                    b.HasOne("PasaLife.Models.RuleCategory", "RuleCategory")
                        .WithMany("Rules")
                        .HasForeignKey("RuleCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InformationCenter");

                    b.Navigation("RuleCategory");
                });

            modelBuilder.Entity("PasaLife.Models.SimpleProduct", b =>
                {
                    b.HasOne("PasaLife.Models.Product", "Product")
                        .WithOne("SimpleProduct")
                        .HasForeignKey("PasaLife.Models.SimpleProduct", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PasaLife.Models.VacancyDetail", b =>
                {
                    b.HasOne("PasaLife.Models.Vacancy", "Vacancy")
                        .WithOne("VacancyDetail")
                        .HasForeignKey("PasaLife.Models.VacancyDetail", "VacancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("PasaLife.Models.FAQCategory", b =>
                {
                    b.Navigation("FAQs");
                });

            modelBuilder.Entity("PasaLife.Models.InformationCenter", b =>
                {
                    b.Navigation("FAQs");

                    b.Navigation("News");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("PasaLife.Models.Management", b =>
                {
                    b.Navigation("ManagementDetail");
                });

            modelBuilder.Entity("PasaLife.Models.ManagementCategory", b =>
                {
                    b.Navigation("Managements");
                });

            modelBuilder.Entity("PasaLife.Models.New", b =>
                {
                    b.Navigation("NewsDetail");
                });

            modelBuilder.Entity("PasaLife.Models.OnlineService", b =>
                {
                    b.Navigation("ITPlatforms");
                });

            modelBuilder.Entity("PasaLife.Models.Product", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("FAQs");

                    b.Navigation("Partners");

                    b.Navigation("ProductCharts");

                    b.Navigation("ProductDetailTitle");

                    b.Navigation("ProductInformation");

                    b.Navigation("ProductItem1s");

                    b.Navigation("ProductItem3s");

                    b.Navigation("ProductItem4s");

                    b.Navigation("ProductWords");

                    b.Navigation("SimpleProduct");
                });

            modelBuilder.Entity("PasaLife.Models.ReportCategory", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("PasaLife.Models.RuleCategory", b =>
                {
                    b.Navigation("Rules");
                });

            modelBuilder.Entity("PasaLife.Models.Vacancy", b =>
                {
                    b.Navigation("VacancyDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
